import ViewChild AfterViewInit from @angular/core

@ContentChild(relatedComponent) remember: relatedComponent;

one
  three ways to change module in child view because the angular's two times detection rule
  method 1
    set module in ngAfterContentInit

  mehtod 2
    use setTimeout to change module in ngAfterViewInit

  method 3
    import ChangeDetectorRef from @angular/core
    define ref argument in constructor argument list
    after changing module in ngAfterViewInit use the ref's detectChanges function
    (if use ViewChildren this mehtod is preferred)

two
  method 1
    change element attribute by importing ElementRef and ViewChild from @angular/core
    @ViewChild('ElementRef') element: ElementRef;
    use element's setAttribute function to change attribute
      ex:
        this.email.nativeElement.setAttribute('placeholder', 'Enter your email address');
        this.email.nativeElement.classList.add('email');
        this.email.nativeElement.focus();
  mehtod 2 recommended
    import Renderer from @angular/core
    define renderer in constructor argument list
    @ViewChild('ElementRef') element: ElementRef;
    use renderer body functions to change element attributes or invoke functions
